name: CI

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main, develop ]

jobs:
  test:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: ["3.8", "3.9", "3.10", "3.11", "3.12"]
        django-version: ["3.2", "4.0", "4.1", "4.2", "5.0"]
        exclude:
          # Django 5.0 doesn't support Python 3.8
          - python-version: "3.8"
            django-version: "5.0"
          # Django 4.0+ requires Python 3.8+
          - python-version: "3.7"
            django-version: "4.0"
          - python-version: "3.7"
            django-version: "4.1"
          - python-version: "3.7"
            django-version: "4.2"
          - python-version: "3.7"
            django-version: "5.0"

    steps:
    - uses: actions/checkout@v4

    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v4
      with:
        python-version: ${{ matrix.python-version }}

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install Django==${{ matrix.django-version }}
        pip install -e .[test]

    - name: Run tests
      run: |
        pytest --cov=django_metachoices --cov-report=xml --cov-report=term-missing

    - name: Upload coverage to Codecov
      uses: codecov/codecov-action@v3
      with:
        file: ./coverage.xml
        flags: unittests
        name: codecov-umbrella

  lint:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4

    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: "3.11"

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -e .[dev]

    - name: Lint with flake8
      run: |
        flake8 django_metachoices tests

    - name: Check code formatting with black
      run: |
        black --check django_metachoices tests

    - name: Check import sorting with isort
      run: |
        isort --check-only django_metachoices tests

    - name: Type check with mypy
      run: |
        mypy django_metachoices

  build:
    runs-on: ubuntu-latest
    needs: [test, lint]
    steps:
    - uses: actions/checkout@v4

    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: "3.11"

    - name: Install build dependencies
      run: |
        python -m pip install --upgrade pip
        pip install build twine

    - name: Build package
      run: |
        python -m build

    - name: Check package
      run: |
        twine check dist/*

    - name: Upload artifacts
      uses: actions/upload-artifact@v3
      with:
        name: dist
        path: dist/ 